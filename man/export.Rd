% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/import_export.R
\name{export}
\alias{export}
\alias{export_rds}
\alias{export_xlsx}
\alias{export_excel}
\alias{export_csv}
\alias{export_csv2}
\alias{export_tsv}
\alias{export_sav}
\alias{export_spss}
\alias{export_pdf}
\alias{export_png}
\alias{export_clipboard}
\title{Export Data and Plots}
\usage{
export(
  object,
  fn,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  ...
)

export_rds(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  ...
)

export_xlsx(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  sheet_names = NULL,
  autofilter = TRUE,
  rows_zebra = TRUE,
  cols_zebra = FALSE,
  ...
)

export_excel(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  sheet_names = NULL,
  autofilter = TRUE,
  rows_zebra = TRUE,
  cols_zebra = FALSE,
  ...
)

export_csv(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  na = "",
  ...
)

export_csv2(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  na = "",
  ...
)

export_tsv(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  na = "",
  ...
)

export_sav(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  ...
)

export_spss(
  object,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  export_qry = TRUE,
  ...
)

export_pdf(
  plot,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  size = "A5",
  portrait = FALSE,
  ...
)

export_png(
  plot,
  filename = NULL,
  card_number = project_get_current_id(ask = FALSE),
  width = 1000,
  height = 800,
  text.factor = 1.2,
  ...
)

export_clipboard(
  object,
  sep = "\\t",
  na = "",
  header = TRUE,
  quote = FALSE,
  decimal.mark = ",",
  ...
)
}
\arguments{
\item{object, plot}{the \R object to export}

\item{fn}{a manual export function, such as \code{haven::write_sas} to write SAS files}

\item{filename}{the full path of the exported file}

\item{card_number}{a Trello card number}

\item{...}{arguments passed on to methods}

\item{export_qry}{export the underlying SQL query as well}

\item{sheet_names}{sheet names}

\item{autofilter}{create autofilter on columns in first row}

\item{rows_zebra}{create banded rows}

\item{cols_zebra}{create banded columns}

\item{na}{replacement character for empty values (default: \code{""})}

\item{size}{paper size, defaults to A5. Can be A0 to A7.}

\item{portrait}{portrait mode, defaults to \code{FALSE} (i.e., landscape mode)}

\item{width}{required width of the PNG file in pixels}

\item{height}{required height of the PNG file in pixels}

\item{text.factor}{text factor for the exported plot. Defaults to \code{1.2}, which loosely equals a PDF file in A5 format when it comes to text sizes.}

\item{sep}{(for \code{\link[=export_clipboard]{export_clipboard()}}) separator for values in a row (default: tab)}

\item{header}{(for \code{\link[=export_clipboard]{export_clipboard()}}) use column names as header (default: \code{TRUE})}

\item{quote}{(for \code{\link[=export_clipboard]{export_clipboard()}}) use quotation marks (default: \code{FALSE})}

\item{decimal.mark}{(for \code{\link[=export_clipboard]{export_clipboard()}}) character to use for decimal numbers}
}
\description{
These functions can be used to export data and plots. They invisibly return the object itself again, allowing for usage in pipes. The functions work closely with the \code{certeprojects} package and support Trello card numbers.
}
\details{
The \code{\link[=export]{export()}} function can export to any file format, as long as the export function is passed on to the \code{fn} argument. This function has to have the object as first argument and the future file location as second argument.

RDS files as created using \code{\link[=export_rds]{export_rds()}} are compatible with R3 and R4.

The \code{\link[=export_xlsx]{export_xlsx()}} and \code{\link[=export_excel]{export_excel()}} functions use \code{\link[=as_excel]{as_excel(..., save = TRUE)}} internally.

For \code{\link[=export_csv]{export_csv()}}, \code{\link[=export_csv2]{export_csv2()}} and \code{\link[=export_tsv]{export_tsv()}}, files will be saved in UTF-8 encoding and \code{NA} values will be exported as \code{""} at default. Like other \verb{*.csv} and \verb{*.csv2} functions, csv is comma (\verb{,}) separated and csv2 is semicolon (\verb{;}) separated.

Exporting to an SPSS file using \code{\link[=export_sav]{export_sav()}} or \code{\link[=export_spss]{export_spss()}} requires the \code{haven} package to be installed.

Exporting to a PDF file using \code{\link[=export_pdf]{export_pdf()}} requires the \code{ggplot2} package to be installed. If the filename is left blank in \code{\link[=export_pdf]{export_pdf()}} or \code{\link[=export_png]{export_png()}}, the title of \code{plot} will be used if it's available and the \code{certeplot2} package is installed, and a timestamp otherwise.

Exporting to a PNG file using \code{\link[=export_png]{export_png()}} requires the \code{ggplot2} package to be installed.

Exporting to the clipboard using \code{\link[=export_clipboard]{export_clipboard()}} requires the \code{clipr} package to be installed. The function allows any object (also other than \link{data.frame}s) and is only limited to the available amount of RAM memory.
}
\examples{
\dontrun{
library(dplyr)

# export two files: 'whole_file.rds' and 'first_ten_rows.xlsx'
starwars \%>\%
  export_rds("whole_file") \%>\%
  slice(1:10) \%>\%
  export_xlsx("first_ten_rows")
}
}
\seealso{
\code{\link[=import]{import()}}
}
