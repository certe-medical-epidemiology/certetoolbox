% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/datetime.R
\name{days_around_today}
\alias{days_around_today}
\alias{yesterday}
\alias{tomorrow}
\alias{last_week}
\alias{this_week}
\alias{next_week}
\alias{last_month}
\alias{this_month}
\alias{next_month}
\alias{last_quarter}
\alias{this_quarter}
\alias{next_quarter}
\alias{last_year}
\alias{this_year}
\alias{next_year}
\alias{start_of_last_week}
\alias{end_of_last_week}
\alias{start_of_this_week}
\alias{end_of_this_week}
\alias{start_of_last_month}
\alias{end_of_last_month}
\alias{start_of_this_month}
\alias{end_of_this_month}
\alias{start_of_last_quarter}
\alias{end_of_last_quarter}
\alias{start_of_this_quarter}
\alias{end_of_this_quarter}
\alias{start_of_last_year}
\alias{end_of_last_year}
\alias{start_of_this_year}
\alias{end_of_this_year}
\alias{week2date}
\alias{nth_monday}
\alias{nth_tuesday}
\alias{nth_wednesday}
\alias{nth_thursday}
\alias{nth_friday}
\alias{nth_saturday}
\alias{nth_sunday}
\alias{year}
\title{Dates around Today}
\usage{
yesterday(ref = today())

tomorrow(ref = today())

last_week(ref = today(), only_start_end = FALSE)

this_week(ref = today(), only_start_end = FALSE)

next_week(ref = today(), only_start_end = FALSE)

last_month(ref = today(), only_start_end = FALSE)

this_month(ref = today(), only_start_end = FALSE)

next_month(ref = today(), only_start_end = FALSE)

last_quarter(ref = today(), only_start_end = FALSE)

this_quarter(ref = today(), only_start_end = FALSE)

next_quarter(ref = today(), only_start_end = FALSE)

last_year(ref = today(), only_start_end = FALSE)

this_year(ref = today(), only_start_end = FALSE)

next_year(ref = today(), only_start_end = FALSE)

start_of_last_week(ref = today(), day = 1)

end_of_last_week(ref = today(), day = 7)

start_of_this_week(ref = today(), day = 1)

end_of_this_week(ref = today(), day = 7)

start_of_last_month(ref = today())

end_of_last_month(ref = today())

start_of_this_month(ref = today())

end_of_this_month(ref = today())

start_of_last_quarter(ref = today())

end_of_last_quarter(ref = today())

start_of_this_quarter(ref = today())

end_of_this_quarter(ref = today())

start_of_last_year(ref = today())

end_of_last_year(ref = today())

start_of_this_year(ref = today())

end_of_this_year(ref = today())

week2date(wk, yr = year(Sys.Date()), day = 1)

nth_monday(ref = today(), n = 1)

nth_tuesday(ref = today(), n = 1)

nth_wednesday(ref = today(), n = 1)

nth_thursday(ref = today(), n = 1)

nth_friday(ref = today(), n = 1)

nth_saturday(ref = today(), n = 1)

nth_sunday(ref = today(), n = 1)

year(ref = today())
}
\arguments{
\item{ref}{reference date (defaults to today)}

\item{only_start_end}{logical to indicate whether only the first and last value of the resulting vector should be returned}

\item{day}{day to return (0 are 7 are Sunday, 1 is Monday, etc.)}

\item{wk}{week to search for}

\item{yr}{year to search for, defaults to current year}

\item{n}{relative number of weeks}
}
\description{
All functions return a vector of dates, except for \code{\link[=yesterday]{yesterday()}}, \code{\link[=today]{today()}}, \code{\link[=tomorrow]{tomorrow()}}, \code{\link[=week2date]{week2date()}}, and the \verb{start_of_*()}, \verb{end_of_*()} and \verb{nth_*()} functions; these return 1 date.
}
\details{
Week ranges always start on Mondays and end on Sundays.

\code{\link[=year]{year()}} always returns an \link{integer}.
}
\examples{
today() \%in\% this_month()

library(dplyr, warn.conflicts = FALSE)

# 2nd Monday of last month:
last_month() \%>\% nth_monday(2)

df <- data.frame(date = sample(seq.Date(start_of_last_year(),
                                        end_of_this_year(),
                                        by = "day"),
                               size = 500))
df$time <- as.POSIXct(paste(df$date, "12:00:00"))

# these are equal:
df \%>\%
  filter(date \%>\% between(start_of_last_week(),
                          end_of_last_week()))
df \%>\%
  filter(date \%in\% last_week())


# be sure to transform times to dates in certain filters
df \%>\%
  filter(as.Date(time) \%>\% between(start_of_last_week(),
                                   end_of_last_week()))
df \%>\%
  filter(as.Date(time) \%in\% last_week())
  
\dontrun{
data <- certedb_getmmb(dates = last_week(only_start_end = TRUE))
data <- certedb_getmmb(where = db$o.ontvangstdatum \%in\% last_week())
data <- certedb_getmmb(where = db$dlt.modbac_datumtijd > start_of_this_month())
}
}
