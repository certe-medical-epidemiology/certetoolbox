% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data.frame.R
\name{tbl_flextable}
\alias{tbl_flextable}
\title{Format Data Set as Flextable}
\usage{
tbl_flextable(
  x,
  row.names = rownames(x),
  row.names.bold = TRUE,
  rows.italic = NULL,
  rows.bold = NULL,
  rows.height = NULL,
  rows.fill = NULL,
  rows.zebra = TRUE,
  row.total = FALSE,
  row.total.name = "Totaal",
  row.total.function = sum,
  row.total.widths = NULL,
  row.total.bold = TRUE,
  row.extra.header = list(values = NULL, widths = 1),
  row.extra.footer = list(values = NULL, widths = 1),
  column.names = colnames(x),
  column.names.bold = TRUE,
  columns.width = NULL,
  columns.percent = NULL,
  columns.italic = NULL,
  columns.bold = NULL,
  columns.fill = NULL,
  columns.zebra = FALSE,
  column.total = FALSE,
  column.total.name = "Totaal",
  column.total.function = sum,
  column.total.bold = TRUE,
  align = "c",
  align.part = "all",
  caption = "",
  na = "",
  logicals = c("X", ""),
  round.numbers = 2,
  round.percent = 1,
  format.dates = "d mmm yyyy",
  decimal.mark = dec_mark(),
  big.mark = big_mark(),
  font.family = "Calibri",
  font.size = 9,
  font.size.header = font.size + 1,
  values.colour = NULL,
  values.fill = NULL,
  values.bold = NULL,
  values.italic = NULL,
  autofit = is.null(columns.width) & is.null(rows.height),
  autofit.fullpage = TRUE,
  autofit.fullpage.width = 16,
  vline = NULL,
  vline.part = c("body", "footer"),
  theme = current_markdown_colour(),
  colours = list(rows.fill.even = paste0(theme, "6"), rows.fill.odd = paste0(theme, "5"),
    columns.fill = paste0(theme, "5"), values.fill = paste0(theme, "3"), values.colour =
    theme, vline.colour = theme, hline.colour = theme, header.fill = theme, header.colour
    = "white", vline.header.colour = "white"),
  split.across.pages = NROW(x) > 37,
  print = !interactive(),
  ...
)
}
\arguments{
\item{x}{a \link{data.frame} or a \code{\link[flextable:flextable]{flextable}} object or a \code{\link[gtsummary:tbl_summary]{gtsummary}} object}

\item{row.names}{row names to be displayed. Will be \code{1:nrow(x)} if set to TRUE, but can be a vector of values.}

\item{row.names.bold}{display row names in bold}

\item{rows.italic}{column indexes of rows in italics}

\item{rows.bold}{column indexes of rows in bold}

\item{rows.height}{height of the rows in centimetres}

\item{rows.fill}{the column indices of rows to be shaded}

\item{rows.zebra}{banded rows in the body - equivalent to \code{rows.fill = seq(2, nrow(x), 2)}}

\item{row.total}{add a row total (at the bottom of the table)}

\item{row.total.name}{name of the row total}

\item{row.total.function}{function used to calculate all numeric values per column (non-numeric columns are skipped)}

\item{row.total.widths}{cell width in row total}

\item{row.total.bold}{bold formatting of row total}

\item{row.extra.header}{an extra header to be displayed above the table}

\item{row.extra.footer}{an extra footer to show below the table}

\item{column.names}{column names to be displayed. Can also be a named vector where the names are existing columns, or indices of columns. When this vector is smaller than \code{ncol(x)}, only the first \code{length(column.names)} are replaced. When this vector is longer than \code{ncol(x)}, all column names are replaced}

\item{column.names.bold}{display column names in bold}

\item{columns.width}{width of columns. For \code{autofit.fullpage = TRUE}, these are proportions to \code{autofit.fullpage.width}. For \code{autofit.fullpage = FALSE}, these are centimeters}

\item{columns.percent}{display the column indices as percentages using \code{\link[certestyle:format2]{format2()}} - example: \code{columns.percent = c(2, 3)}}

\item{columns.italic}{column indices of columns to be displayed in italics}

\item{columns.bold}{column indices of columns in bold}

\item{columns.fill}{the column indices of rows to be shaded}

\item{columns.zebra}{banded columns - equivalent to \code{columns.fill = seq(2, ncol(x), 2)}}

\item{column.total}{adding a column total (to the right of the table)}

\item{column.total.name}{name of the column total}

\item{column.total.function}{function used to calculate all numeric values per row}

\item{column.total.bold}{bold formatting of column total}

\item{align}{default is "c", which aligns everything centrally. Use "r", "l", "c" and "j"/"u" (justify/align) to change alignment. Can be a vector or a character (like "lrrrcc")}

\item{align.part}{part of the table where the alignment should take place ("all", "header", "body", "footer")}

\item{caption}{table caption}

\item{na}{text for missing values}

\item{logicals}{vector with two values that replace \code{TRUE} and \code{FALSE}}

\item{round.numbers}{number of decimal places to round up for numbers}

\item{round.percent}{number of decimal places to round to when using \code{columns.percent}}

\item{format.dates}{see \code{\link[certestyle:format2]{format2()}}}

\item{decimal.mark}{decimal separator, defaults to \code{\link[=dec_mark]{dec_mark()}}}

\item{big.mark}{thousands separator, defaults to \code{\link[=big_mark]{big_mark()}}}

\item{font.family}{table font family}

\item{font.size}{table font size}

\item{font.size.header}{font size of header}

\item{values.colour, values.fill, values.bold, values.italic}{values to be formatted}

\item{autofit}{format table in width automatically. This will apply \code{\link[flextable:autofit]{autofit()}}.}

\item{autofit.fullpage}{display table across width of page}

\item{autofit.fullpage.width}{set number of centimetres to width of table}

\item{vline}{indices of columns to have a vertical line to their right}

\item{vline.part}{part of the table where the vertical lines should be placed ("all", "header", "body", "footer")}

\item{theme}{a Certe colour theme, defaults to \code{\link[certestyle:current_markdown_colour]{current_markdown_colour()}} which determines the Certe colour based on a markdown YAML header and defaults to \code{"certeblauw"}. Can also be \code{"certeroze"}, \code{"certegroen"}, etc. This will set the list in \code{colours} and will be ignored if \code{colours} is set manually. Can be set to "white" for a clean look.}

\item{colours}{a \link{list} with the following named character values: \code{rows.fill.even}, \code{rows.fill.odd}, \code{columns.fill}, \code{values.fill}, and \code{values.colour}. All values will be evaluated with \code{\link[certestyle:colourpicker]{colourpicker()}}.}

\item{split.across.pages}{a \link{logical} whether tables are allowed to split across page. This argument only has effect for PDF output.}

\item{print}{forced printing (required in a \code{for} loop), default is \code{TRUE} in non-interactive sessions}

\item{...}{not used}
}
\value{
\link{flextable} object
}
\description{
Format a \link{data.frame} as \code{\link[=flextable]{flextable()}} with Certe style, bold headers and Dutch number formats. This function can also transform existing \code{flextable} and \code{gtsummary} objects to allow the formatting provided in this \code{\link[=tbl_flextable]{tbl_flextable()}} function.
}
\details{
Run \code{\link[=tbl_markdown]{tbl_markdown()}} on a \code{flextable} object to transform it into markdown for use in Quarto or R Markdown reports. If \code{print = TRUE} in non-interactive sessions (Quarto or R Markdown), the \code{flextable} object will also be printed in markdown.

The value for \code{theme} is dependent on whether a colour is set in the markdown YAML header. Otherwise, use \code{theme} to set a Certe colour theme, defaults to \code{"certeblauw"}:

\if{html}{\out{<div class="sourceCode r">}}\preformatted{# from the example below
tbl_flextable(df)
}\if{html}{\out{</div>}}

\figure{flextableblauw.png}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{tbl_flextable(df, theme = "certeroze")
}\if{html}{\out{</div>}}

\figure{flextableroze.png}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{tbl_flextable(df, theme = "certegeel")
}\if{html}{\out{</div>}}

\figure{flextablegeel.png}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{tbl_flextable(df, theme = "certegroen", vline = c(2:3))
}\if{html}{\out{</div>}}

\figure{flextablegroen.png}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{tbl_flextable(
  df,
  theme = "certelila",
  row.total = TRUE,
  row.total.function = median,
  round.numbers = 4,
  row.extra.header = list(values = LETTERS[1:5])
)
}\if{html}{\out{</div>}}

\figure{flextablelila.png}
}
\examples{
\dontrun{

# generate a data.frame
df <- data.frame(text = LETTERS[1:10],
                 `decimal numbers` = runif(10, 0, 10),
                 `whole numbers` = as.integer(runif(10, 0, 10)),
                 `logical values` = as.logical(round(runif(10, 0, 1))),
                 dates = today() - runif(10, 200, 2000),
                 stringsAsFactors = FALSE)

# default
tbl_flextable(df)      # dataset has no row names
tbl_flextable(mtcars)  # dataset has row names

# print in markdown
df |> 
  tbl_flextable() |> 
  tbl_markdown()
  
# transform a gtsummary to a flextable
iris |>
  tbl_gtsummary(Species, add_p = TRUE) |>
  tbl_flextable()
  
# extra formatting
tbl_flextable(df,
              logicals = c("X", "-"),     # replaces TRUE en FALSE
              values.colour = "X",
              values.fill = "X",
              row.names = "S. aureus",
              columns.italic = 1,
              format.dates = "ddd dd-mm-yy",
              round.numbers = 3)

# row totals
tbl_flextable(df,
              row.total = TRUE,           # add row total
              row.total.function = max,   # instead of sum()
              row.total.name = "Maximum", # also works with dates
              columns.percent = 2,        # 2nd column as percentages
              round.percent = 0)          # rounding percentages

# column names
tbl_flextable(df,
              column.names = c("1" = "Column 1",
                               "2" = "Column 2",
                               dates = "DATES!"))
tbl_flextable(df,
              column.names = LETTERS)

# vertical lines, alignment and row names
tbl_flextable(df,
              align = "lrrcc", # also works: c("l", "r", "r", "c", "c")
              font.size = 12,
              vline = c(2, 4),
              vline.part = "all",
              row.names = paste("Experiment", 1:10))

# width of cells and table
tbl_flextable(data.frame(test1 = "A", test2 = "B"),
              vline = 1,
              autofit.fullpage.width = 16, # default values in cm
              columns.width = c(1, 3))     # ratio; cells become 4 and 12 cm

tbl_flextable(data.frame(test1 = "A", test2 = "B"),
              vline = 1,
              autofit.fullpage = FALSE,    # no fullpage autofit
              columns.width = c(1, 3))     # cells become 1 and 3 cm
              
# adding extra header or footer
tbl_flextable(data.frame(test1 = "A", test2 = "B"),
              row.extra.header = list(values = c("Header", "Header"),
                                      widths = c(1, 1)),
              row.extra.footer = list(values = c("Footer", "Footer"),
                                      widths = c(1, 1)))
}
}
\seealso{
\code{\link[=flextable]{flextable()}}
}
